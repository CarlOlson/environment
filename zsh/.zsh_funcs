#!/usr/bin/env zsh

save_alias () {
    if [[ ! -z $1 ]]; then
        echo alias `alias $1` >> $ZSHDIR/.zsh_aliases
    else
        echo 'No alias specified'
        return 1
    fi
}

_save_alias () {
    local aliases=`alias | sed -e 's/=.*//'`
    _arguments "1:alias:($aliases)"
}

compdef _save_alias save_alias

swap-to-home () {
    git config --global user.name "CarlOlson"
    git config --global user.email "CarlOlson@users.noreply.github.com"

    ssh-add -D
    ssh-add $HOME/.ssh/id_rsa
}

copy () {
    if [[ "$OSTYPE" == "linux-gnu" ]]; then
        if [ ! -z "$@" ]; then
            echo $@ | xclip -selection c
        else
            xclip -selection c
        fi
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        if [ ! -z "$@" ]; then
            echo $@ | pbcopy
        else
            pbcopy
        fi
    else
        echo "unknown OS"
    fi
}

spellcheck () {
    echo "$@" | aspell -a list
}

# stolen from co-worker
git_is_clean()
{
    git update-index -q --ignore-submodules --refresh

    # unstaged changes in the working tree
    if ! git diff-files --quiet --ignore-submodules --
    then
        return 1
    fi

    # uncommitted changes in the index
    if ! git diff-index --cached --quiet HEAD --ignore-submodules --
    then
        return 2
    fi

    return 0
}

chpwd_nix_shell() {
    if [[ -z $IN_NIX_SHELL ]]; then
        if [[ -e default.nix ]]; then
            echo -n "Enter nix-shell? [Y/n] "
            if read -qs; then
                nix-shell --command 'exec zsh; return'
            fi
        fi
    fi
}

inc() {
    local input=$1
    if [[ -z $input ]]; then
        read input
    fi
    echo $(($input + 1))
}

dec() {
    local input=$1
    if [[ -z $input ]]; then
        read input
    fi
    echo $(($input - 1))
}

ep() {
    local episode=$1
    local regex='.*[^0-9]0?'$episode'[^0-9].*'

    if [ $episode -gt 0 ]; then
        find . -maxdepth 1 -regex $regex | tail -n 1
    fi
}

pep() {
    mpv "`ep $1`"
}

zrefresh() {
    source $ZSHDIR/.zshrc
    true
}

ec() {
    if [[ ! -z $EMACS ]]; then
        emacsclient --no-wait $@
    else
        emacsclient -tty $@
    fi
}

m() {
    if [[ ! -z $EMACS ]]; then
        emacsclient --eval '(man "'$@'")'
    else
        man $@
    fi
}
