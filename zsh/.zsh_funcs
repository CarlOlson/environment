#!/usr/bin/env zsh

save_alias () {
    if [[ ! -z $1 ]]; then
        echo alias `alias $1` >> $ZSHDIR/.zsh_aliases
    else
        echo 'No alias specified'
        return 1
    fi
}

spellcheck () {
    echo "$@" | LANG=en_US aspell -a
}

# stolen from co-worker
git_is_clean()
{
    git update-index -q --ignore-submodules --refresh

    # unstaged changes in the working tree
    if ! git diff-files --quiet --ignore-submodules --
    then
        return 1
    fi

    # uncommitted changes in the index
    if ! git diff-index --cached --quiet HEAD --ignore-submodules --
    then
        return 2
    fi

    return 0
}

chpwd_nix_shell() {
    if [[ -z $IN_NIX_SHELL ]]; then
        if [[ -e default.nix ]]; then
            echo -n "Enter nix-shell? [Y/n] "
            if read -qs; then
                nix-shell --command 'exec zsh; return'
            fi
        fi
    fi
}

inc() {
    local input=$1
    if [[ -z $input ]]; then
        read input
    fi
    echo $(($input + 1))
}

dec() {
    local input=$1
    if [[ -z $input ]]; then
        read input
    fi
    echo $(($input - 1))
}

ep() {
    local episode=$1
    local regex='.*[^0-9]0?'$episode'[^0-9].*'

    if [ $episode -gt 0 ]; then
        find . -maxdepth 1 -regex $regex | tail -n 1
    fi
}

pep() {
    mpv "`ep $1`"
}

zrefresh() {
    source $ZSHDIR/.zshrc
    true
}

ec() {
    if [[ ! -z $EMACS ]]; then
        emacsclient --no-wait $@
    else
        emacsclient -tty $@
    fi
}

man() {
    if [[ ! -z $EMACS ]]; then
        emacsclient --eval '(man "'$@'")'
    else
        command man $@
    fi
}

exdoc() {
    elixir -e "require IEx.Helpers; IEx.Helpers.h($@)"
}

permissions() {
    if [ -z "$1" ]; then
        stat -c '%A %a %n' *
    elif [ -d "$1" ]; then
        stat -c '%A %a %n' $1 $1/*
    else
        stat -c '%A %a %n' $@
    fi
}

clean_ws() {
    emacs -Q -nw --file $1 -f delete-trailing-whitespace -f save-buffer -f kill-emacs
}

fzf-history-widget() {
  local selected num
  setopt localoptions noglobsubst noposixbuiltins pipefail 2> /dev/null
  # previous: fc -rl 1
  selected=( $(\fc -rl 1 | \sort -uk2 | \sort -nk1 | tac - |
    FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} $FZF_DEFAULT_OPTS -n2..,.. --tiebreak=index --bind=ctrl-r:toggle-sort $FZF_CTRL_R_OPTS --query=${(qqq)LBUFFER} +m" $(__fzfcmd)) )
  local ret=$?
  if [ -n "$selected" ]; then
    num=$selected[1]
    if [ -n "$num" ]; then
      zle vi-fetch-history -n $num
    fi
  fi
  zle reset-prompt
  return $ret
}
